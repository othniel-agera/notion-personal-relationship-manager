{"version":3,"file":"authentication.js","sourceRoot":"","sources":["../../src/middlewares/authentication.ts"],"names":[],"mappings":";;;AAEA,6CAAsC;AAE/B,IAAM,YAAY,GAAG,UAAC,GAAuB,EAAE,GAAa,EAAE,IAAkB;IACtF,IAAI,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC;IACrC,IAAI,KAAK,EAAE;QACT,IAAI;YACF,IAAG,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,EAAC;gBAC7B,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7B;YACD,IAAM,YAAY,GAAG,IAAA,qBAAM,EAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACxD,GAAG,CAAC,OAAO,GAAG,YAAY,CAAC;YAC3B,OAAO,IAAI,EAAE,CAAC;SACf;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,qDAAqD,EAAE,CAAC,CAAC;SACjG;KACF;SAAM;QACL,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,oCAAoC,EAAE,CAAC,CAAC;KAChF;AACH,CAAC,CAAA;AAhBY,QAAA,YAAY,gBAgBxB","sourcesContent":["import { Response, NextFunction } from 'express';\nimport { RequestWithDecoded } from '../interfaces';\nimport { verify } from 'jsonwebtoken';\n\nexport const authenticate = (req: RequestWithDecoded, res: Response, next: NextFunction)=>{\n\tlet token = req.headers.authorization;\n  if (token) {\n    try {\n      if(token.startsWith('Bearer ')){\n        token = token.split(' ')[1];\n      }\n      const decodedToken = verify(token, process.env.JWT_KEY);\n      req.decoded = decodedToken;\n      return next();\n    } catch (error) {\n      return res.status(401).send({ message: 'Unauthorized request, please provide a valid token.' });\n    }\n  } else {\n    return res.status(401).send({ message: 'Unauthorized request, please login' });\n  }\n}"]}