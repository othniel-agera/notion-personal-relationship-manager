{"version":3,"file":"db.js","sourceRoot":"","sources":["../../src/models/db.ts"],"names":[],"mappings":";;;;;AAAA,sDAAgC;AAChC,IAAI,GAAG,GAAG,EAAE,CAAC;AAEb,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,IAAI,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE;IACpE,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;CAC/B;KAAM,IAAI,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE;IAClC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;CAC/B;AAED,IAAI,GAAG,EAAE;IACP,kBAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;CACvB;AAED,kBAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,WAAW,EAAE;IAClC,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IACtC,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IACtC,OAAO,CAAC,GAAG,CAAC,gCAAyB,GAAG,CAAE,CAAC,CAAC;IAC5C,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IACtC,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC;AAEH,kBAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,GAAG;IAClC,OAAO,CAAC,GAAG,CAAC,qCAA8B,GAAG,CAAE,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC;AAEH,kBAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,cAAc,EAAE;IACrC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC;AAEH,IAAM,QAAQ,GAAG,UAAC,GAAW,EAAE,QAAQ;IACrC,kBAAQ,CAAC,UAAU,CAAC,KAAK,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,wCAAiC,GAAG,CAAE,CAAC,CAAC;QACpD,QAAQ,EAAE,CAAC;IACb,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE;IACtB,QAAQ,CAAC,iBAAiB,EAAE;QAC1B,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE;IACnB,QAAQ,CAAC,iBAAiB,EAAE;QAC1B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE;IACpB,QAAQ,CAAC,qBAAqB,EAAE;QAC9B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,wBAAsB;AACtB,yBAAuB;AACvB,wBAAsB","sourcesContent":["import mongoose from \"mongoose\";\r\nlet uri = \"\";\r\n\r\nif (process.env.NODE_ENV === \"production\" && process.env.MONGODB_URI) {\r\n  uri = process.env.MONGODB_URI;\r\n} else if (process.env.MONGODB_URI) {\r\n  uri = process.env.MONGODB_URI;\r\n}\r\n\r\nif (uri) {\r\n  mongoose.connect(uri);\r\n}\r\n\r\nmongoose.connection.on(\"connected\", () => {\r\n  console.log(\"======================\");\r\n  console.log(\"======================\");\r\n  console.log(`Mongoose connected to ${uri}`);\r\n  console.log(\"======================\");\r\n  console.log(\"======================\");\r\n});\r\n\r\nmongoose.connection.on(\"error\", (err) => {\r\n  console.log(`Mongoose connection error: ${err}`);\r\n});\r\n\r\nmongoose.connection.on(\"disconnected\", () => {\r\n  console.log(\"Mongoose disconnected\");\r\n});\r\n\r\nconst shutdown = (msg: string, callback) => {\r\n  mongoose.connection.close(() => {\r\n    console.log(`Mongoose disconnected through ${msg}`);\r\n    callback();\r\n  });\r\n};\r\n\r\nprocess.once(\"SIGUSR2\", () => {\r\n  shutdown(\"nodemon restart\", () => {\r\n    process.kill(process.pid, \"SIGUSR2\");\r\n  });\r\n});\r\n\r\nprocess.on(\"SIGINT\", () => {\r\n  shutdown(\"app termination\", () => {\r\n    process.exit(0);\r\n  });\r\n});\r\n\r\nprocess.on(\"SIGTERM\", () => {\r\n  shutdown(\"Heroku app shutdown\", () => {\r\n    process.exit(0);\r\n  });\r\n});\r\n\r\nimport \"./user.model\";\r\nimport \"./order.model\";\r\nimport \"./cart.model\";\r\n"]}